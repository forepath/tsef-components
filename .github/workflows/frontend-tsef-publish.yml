name: Frontend TSEF - Build and Deploy to GitHub Pages

on:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  setup:
    uses: ./.github/workflows/_setup.yml

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Enable corepack
        run: corepack enable || true

      - name: Detect package manager
        id: pm
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then echo "pm=pnpm" >> $GITHUB_OUTPUT; exit 0; fi
          if [ -f yarn.lock ]; then echo "pm=yarn" >> $GITHUB_OUTPUT; exit 0; fi
          if [ -f package-lock.json ]; then echo "pm=npm" >> $GITHUB_OUTPUT; exit 0; fi
          echo "pm=pnpm" >> $GITHUB_OUTPUT

      - name: Install dependencies
        shell: bash
        run: |
          PM="${{ steps.pm.outputs.pm }}"
          if [ "$PM" = "pnpm" ]; then pnpm install --frozen-lockfile; fi
          if [ "$PM" = "yarn" ]; then yarn install --frozen-lockfile; fi
          if [ "$PM" = "npm" ]; then npm ci; fi

      - name: Build application for all languages
        run: npx nx build frontend-tsef --configuration=production

      - name: Setup custom domain
        run: echo "tsef.dev" > dist/apps/frontend-tsef/browser/CNAME

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist/apps/frontend-tsef/browser'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
